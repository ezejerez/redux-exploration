{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezeki\\\\Desktop\\\\prog\\\\redux-test\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst actionIncrement = {\n  type: \"@counter/incremented\"\n};\nconst actionDecrement = {\n  type: \"@counter/decremented\"\n};\nconst actionReset = {\n  type: \"@counter/reseted\"\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"@counter/incremented\":\n      return state + 1;\n\n    case \"@counter/decremented\":\n      return state - 1;\n\n    case \"@counter/reseted\":\n      return 0;\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: store.getState()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        store.dispatch(actionIncrement);\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        store.dispatch(actionDecrement);\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        store.dispatch(actionReset);\n      },\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ezeki/Desktop/prog/redux-test/src/App.js"],"names":["React","ReactDOM","createStore","actionIncrement","type","actionDecrement","actionReset","counterReducer","state","action","store","subscribe","console","log","getState","App","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAO,WAAP;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAIA,MAAMC,eAAe,GAAG;AACtBD,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAIA,MAAME,WAAW,GAAG;AAClBF,EAAAA,IAAI,EAAE;AADY,CAApB;;AAIA,MAAMG,cAAc,GAAG,YAAuB;AAAA,MAAtBC,KAAsB,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AAC5C,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,sBAAL;AACE,aAAOI,KAAK,GAAG,CAAf;;AACF,SAAK,sBAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF,SAAK,kBAAL;AACE,aAAO,CAAP;;AACF;AACE,aAAOA,KAAP;AARJ;AAUD,CAXD;;AAaA,MAAME,KAAK,GAAGR,WAAW,CAACK,cAAD,CAAzB;AAEAG,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACD,CAFD;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE;AAAA,4BACE;AAAA,gBAAML,KAAK,CAACI,QAAN;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,KAAK,CAACM,QAAN,CAAeb,eAAf;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AACE,MAAA,OAAO,EAAE,MAAM;AACbO,QAAAA,KAAK,CAACM,QAAN,CAAeX,eAAf;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAgBE;AACE,MAAA,OAAO,EAAE,MAAM;AACbK,QAAAA,KAAK,CAACM,QAAN,CAAeV,WAAf;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA3BD;;KAAMS,G;AA6BN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport \"./App.css\";\n\nconst actionIncrement = {\n  type: \"@counter/incremented\",\n};\n\nconst actionDecrement = {\n  type: \"@counter/decremented\",\n};\n\nconst actionReset = {\n  type: \"@counter/reseted\",\n};\n\nconst counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"@counter/incremented\":\n      return state + 1;\n    case \"@counter/decremented\":\n      return state - 1;\n    case \"@counter/reseted\":\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\nconst App = () => {\n  return (\n    <div>\n      <div>{store.getState()}</div>\n      <button\n        onClick={() => {\n          store.dispatch(actionIncrement);\n        }}\n      >\n        +\n      </button>\n      <button\n        onClick={() => {\n          store.dispatch(actionDecrement);\n        }}\n      >\n        -\n      </button>\n      <button\n        onClick={() => {\n          store.dispatch(actionReset);\n        }}\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}