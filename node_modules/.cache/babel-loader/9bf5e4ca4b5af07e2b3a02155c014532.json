{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezeki\\\\Desktop\\\\prog\\\\redux-test\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderApp = () => ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"@counter/incremented\":\n      return state + 1;\n\n    case \"@counter/decremented\":\n      return state - 1;\n\n    case \"@counter/reseted\":\n      return 0;\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nrenderApp();\nstore.subscribe(renderApp); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/ezeki/Desktop/prog/redux-test/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","createStore","renderApp","render","document","getElementById","counterReducer","state","action","type","store","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAChBJ,QAAQ,CAACK,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,CADF;;AAQA,MAAMC,cAAc,GAAG,YAAuB;AAAA,MAAtBC,KAAsB,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAK,sBAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF,SAAK,kBAAL;AACE,aAAO,CAAP;;AACF;AACE,aAAOA,KAAP;AARJ;AAUD,CAXD;;AAaA,MAAMG,KAAK,GAAGT,WAAW,CAACK,cAAD,CAAzB;AAEAJ,SAAS;AACTQ,KAAK,CAACC,SAAN,CAAgBT,SAAhB,E,CAEA;AACA;AACA;;AACAF,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\n\nconst renderApp = () =>\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n\nconst counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"@counter/incremented\":\n      return state + 1;\n    case \"@counter/decremented\":\n      return state - 1;\n    case \"@counter/reseted\":\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\n\nrenderApp();\nstore.subscribe(renderApp);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}