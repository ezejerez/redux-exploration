{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezeki\\\\Desktop\\\\prog\\\\redux-test\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst actionIncrement = {\n  type: \"@counter/incremented\"\n};\nconst actionDecrement = {\n  type: \"@counter/decremented\"\n};\nconst actionReset = {\n  type: \"@counter/reseted\"\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"@counter/incremented\":\n      return state + 1;\n\n    case \"@counter/decremented\":\n      return state - 1;\n\n    case \"@counter/reseted\":\n      return 0;\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer); // store.subscribe(() => {\n//   console.log(store.getState());\n// });\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-container\",\n      children: store.getState()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => {\n          store.dispatch(actionIncrement);\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => {\n          store.dispatch(actionDecrement);\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => {\n          store.dispatch(actionReset);\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst renderApp = () => ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));\n\nrenderApp();\nstore.subscribe(renderApp); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ezeki/Desktop/prog/redux-test/src/index.js"],"names":["React","ReactDOM","reportWebVitals","createStore","actionIncrement","type","actionDecrement","actionReset","counterReducer","state","action","store","App","getState","dispatch","renderApp","render","document","getElementById","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAIA,MAAMC,eAAe,GAAG;AACtBD,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAIA,MAAME,WAAW,GAAG;AAClBF,EAAAA,IAAI,EAAE;AADY,CAApB;;AAIA,MAAMG,cAAc,GAAG,YAAuB;AAAA,MAAtBC,KAAsB,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AAC5C,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,sBAAL;AACE,aAAOI,KAAK,GAAG,CAAf;;AACF,SAAK,sBAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF,SAAK,kBAAL;AACE,aAAO,CAAP;;AACF;AACE,aAAOA,KAAP;AARJ;AAUD,CAXD;;AAaA,MAAME,KAAK,GAAGR,WAAW,CAACK,cAAD,CAAzB,C,CAEA;AACA;AACA;;AAEA,MAAMI,GAAG,GAAG,MAAM;AAChB,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAAkCD,KAAK,CAACE,QAAN;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbF,UAAAA,KAAK,CAACG,QAAN,CAAeV,eAAf;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbO,UAAAA,KAAK,CAACG,QAAN,CAAeR,eAAf;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbK,UAAAA,KAAK,CAACG,QAAN,CAAeP,WAAf;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAhCD;;KAAMK,G;;AAkCN,MAAMG,SAAS,GAAG,MAChBd,QAAQ,CAACe,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,CADF;;AAQAH,SAAS;AACTJ,KAAK,CAACQ,SAAN,CAAgBJ,SAAhB,E,CAEA;AACA;AACA;;AACAb,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\n\nconst actionIncrement = {\n  type: \"@counter/incremented\",\n};\n\nconst actionDecrement = {\n  type: \"@counter/decremented\",\n};\n\nconst actionReset = {\n  type: \"@counter/reseted\",\n};\n\nconst counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"@counter/incremented\":\n      return state + 1;\n    case \"@counter/decremented\":\n      return state - 1;\n    case \"@counter/reseted\":\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\n\n// store.subscribe(() => {\n//   console.log(store.getState());\n// });\n\nconst App = () => {\n  return (\n    <div className=\"main-container\">\n      <div className=\"state-container\">{store.getState()}</div>\n      <div className=\"buttons-container\">\n        <button\n          className=\"button\"\n          onClick={() => {\n            store.dispatch(actionIncrement);\n          }}\n        >\n          +\n        </button>\n        <button\n          className=\"button\"\n          onClick={() => {\n            store.dispatch(actionDecrement);\n          }}\n        >\n          -\n        </button>\n        <button\n          className=\"button\"\n          onClick={() => {\n            store.dispatch(actionReset);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst renderApp = () =>\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n\nrenderApp();\nstore.subscribe(renderApp);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}